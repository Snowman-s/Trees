name: Automatic Release Draft

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  release:
    runs-on: windows-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install MSVC toolchain
        run: rustup target add x86_64-pc-windows-msvc

      - name: Extract Cargo.toml version
        id: cargo_version
        run: |
          $version = Select-String -Path "Cargo.toml" -Pattern '^version\s*=\s*".*"' | ForEach-Object { $_.Matches.Groups[0].Value -replace '^version\s*=\s*"(.*)"', '$1' }
          echo "CARGO_VERSION=$version" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8

      - name: Generate release notes
        id: release-notes
        uses: release-drafter/release-drafter@v6
        with:
          version: ${{ env.CARGO_VERSION }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build
        run: |
          cargo build --release --target x86_64-pc-windows-msvc

      - name: Delete existing asset if exists
        env:
          RELEASE_ID: ${{ steps.release-notes.outputs.id }}
          FILE_PATH: target/x86_64-pc-windows-msvc/release/trees.exe
          FILE_NAME: trees-x86_64-pc-windows-msvc.exe
        run: |
          Write-Host "Checking for existing asset: $env:FILE_NAME"

          # アセット一覧を取得
          $ASSETS_JSON = curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" -H "Accept: application/vnd.github+json" "https://api.github.com/repos/${{ github.repository }}/releases/${{ env.RELEASE_ID }}/assets"

          # 同名ファイルのIDを取得
          $ASSET_ID = ($ASSETS_JSON | ConvertFrom-Json) | Where-Object { $_.name -eq $env:FILE_NAME } | Select-Object -ExpandProperty id

          if ($ASSET_ID) {
            Write-Host "Existing asset found (ID: $ASSET_ID), deleting..."
            curl -X DELETE -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" "https://api.github.com/repos/${{ github.repository }}/releases/assets/$ASSET_ID"
            Write-Host "Deleted asset."
          } else {
            Write-Host "No existing asset to delete."
          }

      - name: Upload new artifact
        env:
          RELEASE_ID: ${{ steps.release-notes.outputs.id }}
          FILE_PATH: target/x86_64-pc-windows-msvc/release/trees.exe
          FILE_NAME: trees-x86_64-pc-windows-msvc.exe
        run: |
          Write-Host "Uploading new artifact: $env:FILE_NAME"

          curl -X POST -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" -H "Content-Type: application/exe" --data-binary @"${{ env.FILE_PATH }}" "https://uploads.github.com/repos/${{ github.repository }}/releases/${{ env.RELEASE_ID }}/assets?name=${{ env.FILE_NAME }}"
